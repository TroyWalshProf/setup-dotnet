# This is a basic workflow that is manually triggered

name: Create New Release


on:
  release:
    types: [published]
    
  workflow_dispatch:
    inputs:
      override:
        description: 'Version Number'     
        required: true
        default: '0.0.0'
#      tags:
#        description: 'Manual'  

jobs:
  
  MakeNewRelease:
    runs-on: ubuntu-latest

    steps:      
    - name: Get version
      id: Version
      shell: pwsh
      run: |
        if ("${{github.ref}}".trim() -notmatch '^refs/tags/v(\d+\.\d+\.\d+)$') {
          $version = "::set-output name=RELEASE_NUMBER::${{ github.event.inputs.override }}"
          echo $version
          exit
        }
        else
        {
          $version = $matches[1]
          $version = "::set-output name=RELEASE_NUMBER::$($version)"
        }
        
        Write-Host $version
        
    - name: Display
      run: |
        echo "Override ${{ github.event.inputs.override }}!"
        echo "Value ${{ steps.Version.outputs.RELEASE_NUMBER }}!"
        
    - name: GetVersion
      shell: pwsh
      run: |
            #$header = @{Authorization = 'Bearer ${{ secrets.GITHUB_TOKEN }}' }
            #$endPoint = "https://api.github.com/repos/TroyWalshProf/tmp/releases"
            #$body = '{"tag_name":"v${{ steps.Version.outputs.RELEASE_NUMBER }}", "name": "v${{ steps.Version.outputs.RELEASE_NUMBER }}", "draft": true}'
            #$body = '{"tag_name":"v${{ steps.Version.outputs.RELEASE_NUMBER }}"}'
            #Write-Host $body
            #$test = Invoke-RestMethod -Method 'Post' -Uri $endPoint -Headers $header -Body $body
            #Write-Host $test
            
    - uses: actions/github-script@v4
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.repos.createRelease({
            tag_name: "v${{ steps.Version.outputs.RELEASE_NUMBER }}",
            name: "v${{ steps.Version.outputs.RELEASE_NUMBER }}",
            "draft": true,
            owner: context.repo.owner,
            repo: context.repo.repo
          })

    - uses: actions/github-script@v4
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const result = await github.repos.getReleaseByTag({
            tag_name: "v${{ steps.Version.outputs.RELEASE_NUMBER }}",
            owner: context.repo.owner,
            repo: context.repo.repo
          })
          
          github.repos.updateRelease({
            release_id: result.id,
            "draft": false,
            owner: context.repo.owner,
            repo: context.repo.repo
          })

        
  # - name: Deploy to nuget
   #   run: dotnet nuget push **/*.nupkg --api-key ${{ secrets.NUGET_DEPLOY_KEY }} --source https://api.nuget.org/v3/index.json

